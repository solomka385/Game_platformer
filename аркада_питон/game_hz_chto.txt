from pygame import *
from random import *
from time import * 

class stena(sprite.Sprite):
    def __init__(self,image3, x, y):
        sprite.Sprite.__init__(self) 
        self.image =transform.scale(image.load(image3),(500,100))
        self.rect = self.image.get_rect()
        self.rect.x = 330
        self.rect.y = 500
    def go(self):
        window.blit(self.image, (self.rect.x,self.rect.y))

class Hero(stena,sprite.Sprite):
    def __init__(self, image1, x, y,x_speed,y_speed,prov,prizhok):
        sprite.Sprite.__init__(self) 
        self.image =transform.scale(image.load(image1),(80,80))
        self.rect = self.image.get_rect()
        self.rect.x = 400
        self.rect.y = 300
        self.x_speed = 0
        self.y_speed = 0
        self.prov = False
        self.prizhok = False
    def go(self):
        
        collides = sprite.spritecollide(self,grsten,False)
        s = sprite.spritecollideany(self,grsten, collided = None)
        if len(collides) >=1:
            
            
            collides = sprite.spritecollide(self,grsten,True)
            for c in collides:
                if self.rect.x < c.rect.left or self.rect.x > c.rect.right:
                    self.prov == False
                
                if self.rect.bottom > c.rect.top and \
                self.rect.top < c.rect.bottom and \
                self.rect.right > c.rect.left and \
                self.rect.left < c.rect.right :
                    print('efe')
                    
                    self.y_speed = 0
                    self.prov = True
                    
                    
                    self.prizhok = False
                    self.image = transform.scale(image.load('hero.png'),(80,80))
                else:
                    if self.prov == False:
                        
                        self.gravitate()
                        self.rect.y+=self.y_speed
                    self.rect.x+=self.x_speed
        collides=[]
        if self.prov == False:
            
            self.gravitate()
            self.rect.y+=self.y_speed
        self.rect.x+=self.x_speed

        
                
#            if s == True:
#                print('sds')
#                if self.rect.bottomleft > c.rect.bottomright or self.rect.bottomright > c.rect.bottomright:
#                    self.prov = False
        

  #          if self.rect.x < self.rect.x + self.rect.width and c.rect.x + self.rect.width > c.rect.x and self.rect.y < self.rect.y + self.rect.height and self.rect.height + self.rect.y > c.rect.y:
  #              print('туть')
  #              self.y_speed = 0
  #              self.prov = True
  #              self.prizhok = False
  #              self.image = transform.scale(image.load('hero.png'),(80,80)) 
  #          else:
  #              self.gravitate()
  #              self.rect.y+=self.y_speed
                
        
        #if e.type == KEYDOWN:
            #if e.key == K_SPACE:
               # hero.jump()
        
        
        window.blit(self.image,(self.rect.x,self.rect.y))
    def jump(self):
        
        
        for i in range(1,12):
            self.go()
            self.y_speed-=1
            
            if i >= 3  and  i < 10:
                
                self.image = transform.scale(image.load('pacletaet.png'),(80,80))
            
                
        
     
          #  self.y_speed = -10
          #  self.stands_on = False 
              
    def gravitate(self):
       self.y_speed += 0.4
class Enemy(sprite.Sprite):
    def __init__(self, image1, x, y):
        sprite.Sprite.__init__(self) 
        self.image =transform.scale(image.load(image1),(80,80))
        self.rect = self.image.get_rect()
        self.rect.x = randint(20,950)
        
        self.rect.y = 5

window = display.set_mode((1200, 800))
background = image.load("fon_arcade.jpg")
display.set_caption("Аркада")
background = transform.scale(background, (1200, 800))
window.blit(background, (0,0))


stena1 = stena('stenaver1.png',100,800)
stena1.image =transform.scale(stena1.image,(160,500))
stena1.rect.x=50
stena1.rect.y=270

stena2 = stena('stenaver2.png',200,600)
stena2.image =transform.scale(stena2.image,(160,500))
stena2.rect.x=800
stena2.rect.y=100

hero = Hero("hero.png",10,20,10,10,False,False)
enemy = Enemy("enemy.png",200,250)

stenapol = stena('platform.png',500,800)

shift = 0
speed = 0


allk = sprite.Group()
allk.add(hero)
allk.add(enemy)


grsten = sprite.Group()
grsten.add(stenapol)

grsten1 = sprite.Group()
grsten1.add(stena1)
grsten1.add(stena2)


run=True
while run:
    
    for e in event.get():
        if e.type == QUIT:
            run=False
        elif e.type == KEYDOWN:
            if e.key== K_LEFT:
                hero.x_speed=-10
            elif e.key == K_RIGHT:
                hero.x_speed = 10
            elif e.key == K_SPACE and hero.prizhok == False: 
                hero.prov = False
                hero.prizhok = True
                hero.jump()
              #  hero.go()
#                if                 hero.rect.bottom > stenapol.rect.top and \
#                hero.rect.top < stenapol.rect.bottom:
        elif e.type == KEYUP:
            if e.key == K_LEFT:
                hero.x_speed=0
            elif e.key == K_RIGHT:
                hero.x_speed = 0        
                
                    
                
        

    window.blit(background, (0,0))
    
   
    win_width = 1250
    shift += speed
    local_shift = shift % win_width
    window.blit(background, (local_shift, 0))
    if local_shift != 0:
        window.blit(background, (local_shift - win_width + 50, 0))
    left_bound = win_width / 9
    right_bound = win_width - 3 * left_bound 
    
    if (hero.rect.x > right_bound and hero.x_speed > 0) or (hero.rect.x < left_bound and
    hero.x_speed < 0):
        shift -= hero.x_speed
#    for s in allk:
#            s.rect.x -= hero.x_speed    
    stenapol.go()
    stena1.go()
    stena2.go()
    grsten.update()
    hero.go()
    

    
    

    
#    if hero.rect.right >= stena1.rect.right: 
#       hero.x_speed = 0
    display.update()